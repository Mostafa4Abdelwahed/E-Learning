{"version":3,"file":"index.umd.min.js","sources":["../src/utils.ts","../src/editor/ContentEditable.tsx","../src/editor/EditorContext.tsx","../src/editor/HtmlEditor.tsx","../src/editor/Editor.tsx","../src/toolbar/buttons.tsx","../src/toolbar/icons/UnorderedListIcon.tsx","../src/toolbar/icons/OrderedListIcon.tsx","../src/toolbar/dropdowns.tsx","../src/toolbar/HtmlButton.tsx","../src/toolbar/Separator.tsx","../src/toolbar/Toolbar.tsx","../src/editor/DefaultEditor.tsx"],"sourcesContent":["export function getSelectedNode(): Node | undefined {\n  if ((document as any).selection) {\n    return (document as any).selection.createRange().parentElement();\n  }\n\n  const selection = window.getSelection();\n  if (selection && selection.rangeCount > 0) {\n    return selection.getRangeAt(0).startContainer.parentNode || undefined;\n  }\n\n  return undefined;\n}\n\nexport function normalizeHtml(str: string | undefined): string {\n  return str ? str.replace(/&nbsp;|\\u202F|\\u00A0/g, ' ') : '';\n}\n\nexport function replaceCaret(el: HTMLElement) {\n  // Place the caret at the end of the element\n  const target = document.createTextNode('');\n  el.appendChild(target);\n\n  // do not move caret if element was not focused\n  const isTargetFocused = document.activeElement === el;\n  if (target !== null && target.nodeValue !== null && isTargetFocused) {\n    const sel = window.getSelection();\n    if (sel !== null) {\n      const range = document.createRange();\n      range.setStart(target, target.nodeValue.length);\n      range.collapse(true);\n      sel.removeAllRanges();\n      sel.addRange(range);\n    }\n    if (el instanceof HTMLElement) el.focus();\n  }\n}\n","import React from 'react';\nimport type {\n  FocusEvent,\n  ForwardedRef,\n  HTMLAttributes,\n  KeyboardEvent,\n  SyntheticEvent,\n} from 'react';\nimport { normalizeHtml, replaceCaret } from '../utils';\n\n/**\n * Based on https://github.com/lovasoa/react-contenteditable\n * A simple component for a html element with editable contents.\n */\nexport const ContentEditable = React.memo(\n  React.forwardRef(function ContentEditable(\n    { className, disabled, tagName, value = '', ...rest }: ContentEditableProps,\n    ref: ForwardedRef<HTMLElement>,\n  ) {\n    const elRef = React.useRef<HTMLElement>();\n    const htmlRef = React.useRef(value);\n    const restRef = React.useRef(rest);\n\n    React.useEffect(() => {\n      restRef.current = rest;\n      const el = elRef.current;\n      if (el && normalizeHtml(htmlRef.current) !== normalizeHtml(value)) {\n        htmlRef.current = value;\n        el.innerHTML = value;\n        replaceCaret(el);\n      }\n    });\n\n    return React.useMemo(() => {\n      function onSetRef($el: HTMLElement) {\n        elRef.current = $el;\n        if (typeof ref === 'function') {\n          ref($el);\n        } else if (typeof ref === 'object' && ref) {\n          // eslint-disable-next-line no-param-reassign\n          ref.current = $el;\n        }\n      }\n\n      function onChange(event: SyntheticEvent<any>) {\n        const el = elRef.current;\n        if (!el) {\n          return;\n        }\n\n        const elementHtml = el.innerHTML;\n        if (elementHtml !== htmlRef.current) {\n          restRef.current.onChange?.({\n            ...event,\n            target: {\n              value: elementHtml,\n              name: rest.name,\n            } as any,\n          });\n        }\n\n        htmlRef.current = elementHtml;\n      }\n\n      return React.createElement(tagName || 'div', {\n        ...rest,\n        className,\n        contentEditable: !disabled,\n        dangerouslySetInnerHTML: { __html: value },\n        onBlur: (e: FocusEvent<HTMLElement>) =>\n          (restRef.current.onBlur || onChange)(e),\n        onInput: onChange,\n        onKeyDown: (e: KeyboardEvent<HTMLElement>) =>\n          (restRef.current.onKeyDown || onChange)(e),\n        onKeyUp: (e: KeyboardEvent<HTMLElement>) =>\n          (restRef.current.onKeyUp || onChange)(e),\n        ref: onSetRef,\n      });\n      // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [className, disabled, tagName]);\n  }),\n);\n\nexport type ContentEditableEvent = SyntheticEvent<any, Event> & {\n  target: { name?: string; value: string };\n};\n\nexport interface ContentEditableProps extends HTMLAttributes<HTMLElement> {\n  disabled?: boolean;\n  contentEditableRef?: (el: HTMLElement) => void;\n  name?: string;\n  onChange?: (event: ContentEditableEvent) => void;\n  tagName?: string;\n  value?: string;\n}\n","import type { ReactNode } from 'react';\nimport React from 'react';\n\nexport const EditorContext = React.createContext<EditorState | undefined>(\n  undefined,\n);\n\nexport function EditorProvider({ children }: { children: ReactNode }) {\n  const [state, setState] = React.useState<EditorState>({\n    htmlMode: false,\n    update,\n  });\n\n  function update(attrs: EditorState) {\n    setState((prevState) => {\n      return {\n        ...prevState,\n        ...attrs,\n        date: Date.now(),\n      };\n    });\n  }\n\n  return (\n    <EditorContext.Provider value={state}>{children}</EditorContext.Provider>\n  );\n}\n\nexport function useEditorState(): EditorState {\n  const context = React.useContext(EditorContext);\n  if (!context) {\n    throw new Error('You should wrap your component by EditorProvider');\n  }\n\n  return context;\n}\n\nexport interface EditorState {\n  update(attrs: Partial<EditorState>): void;\n  $el?: HTMLElement;\n  $selection?: Node;\n  htmlMode: boolean;\n}\n","import React from 'react';\n\nexport function HtmlEditor({ ...rest }) {\n  return <textarea {...rest} />;\n}\n","import type { ComponentProps, SyntheticEvent } from 'react';\nimport React from 'react';\nimport { getSelectedNode } from '../utils';\nimport { ContentEditable, ContentEditableProps } from './ContentEditable';\nimport { useEditorState } from './EditorContext';\nimport { HtmlEditor } from './HtmlEditor';\nimport '../styles.css';\n\nexport function Editor({\n  children,\n  containerProps,\n  onSelect,\n  ...rest\n}: EditorProps) {\n  const editorState = useEditorState();\n\n  React.useEffect(() => {\n    document.addEventListener('click', onClickOutside);\n    return () => document.removeEventListener('click', onClickOutside);\n  });\n\n  function onClickOutside(event: MouseEvent) {\n    if (event.target === editorState.$el) {\n      return;\n    }\n\n    if (editorState.$el?.contains(event.target as HTMLElement)) {\n      return;\n    }\n\n    editorState.update({ $selection: undefined });\n  }\n\n  function onTextSelect(event: SyntheticEvent<HTMLElement>) {\n    onSelect?.(event);\n    editorState.update({ $selection: getSelectedNode() });\n  }\n\n  function setContentEditableRef($el: HTMLElement) {\n    editorState.update({ $el });\n  }\n\n  if (editorState.htmlMode) {\n    return (\n      <div className=\"rsw-editor\" {...containerProps}>\n        {children}\n        <HtmlEditor {...rest} className=\"rsw-ce rsw-html\" />\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"rsw-editor\" {...containerProps}>\n      {children}\n      <ContentEditable\n        {...rest}\n        ref={setContentEditableRef}\n        onSelect={onTextSelect}\n        className=\"rsw-ce\"\n      />\n    </div>\n  );\n}\n\n// eslint-disable-next-line @typescript-eslint/no-empty-interface\nexport interface EditorProps extends ContentEditableProps {\n  containerProps?: ComponentProps<'div'>;\n}\n","import React from 'react';\nimport type { HTMLAttributes, MouseEvent, ReactNode } from 'react';\nimport { EditorState, useEditorState } from '../editor/EditorContext';\nimport OrderedListIcon from './icons/OrderedListIcon';\nimport UnorderedListIcon from './icons/UnorderedListIcon';\n\nexport const BtnBold = createButton('Bold', 'ùêÅ', 'bold');\n\nexport const BtnBulletList = createButton(\n  'Bullet list',\n  <UnorderedListIcon />,\n  'insertUnorderedList',\n);\n\nexport const BtnClearFormatting = createButton(\n  'Clear formatting',\n  'TÃ≤‚Çì',\n  'removeFormat',\n);\n\nexport const BtnItalic = createButton('Italic', 'ùë∞', 'italic');\n\nexport const BtnStrikeThrough = createButton(\n  'Strike through',\n  <s>ab</s>,\n  'strikeThrough',\n);\n\nexport const BtnLink = createButton('Link', 'üîó', ({ $selection }) => {\n  if ($selection?.nodeName === 'A') {\n    document.execCommand('unlink');\n  } else {\n    // eslint-disable-next-line no-alert\n    document.execCommand('createLink', false, prompt('URL', '') || undefined);\n  }\n});\n\nexport const BtnNumberedList = createButton(\n  'Numbered list',\n  <OrderedListIcon />,\n  'insertOrderedList',\n);\n\nexport const BtnRedo = createButton('Redo', '‚Ü∑', 'redo');\n\nexport const BtnUnderline = createButton(\n  'Underline',\n  <span style={{ textDecoration: 'underline' }}>ùêî</span>,\n  'underline',\n);\n\nexport const BtnUndo = createButton('Undo', '‚Ü∂', 'undo');\n\nexport function createButton(\n  title: string,\n  content: ReactNode,\n  command: ((state: EditorState) => void) | string,\n) {\n  ButtonFactory.displayName = title.replace(/\\s/g, '');\n\n  return ButtonFactory;\n\n  function ButtonFactory(props: HTMLAttributes<HTMLButtonElement>) {\n    const editorState = useEditorState();\n    const { $el, $selection } = editorState;\n\n    let active = false;\n    if (typeof command === 'string') {\n      active = !!$selection && document.queryCommandState(command);\n    }\n\n    function onAction(e: MouseEvent<HTMLButtonElement>) {\n      e.preventDefault();\n\n      if (document.activeElement !== $el) {\n        $el?.focus();\n      }\n\n      if (typeof command === 'function') {\n        command(editorState);\n      } else {\n        document.execCommand(command);\n      }\n    }\n\n    if (editorState.htmlMode) {\n      return null;\n    }\n\n    return (\n      <button\n        type=\"button\"\n        title={title}\n        {...props}\n        className=\"rsw-btn\"\n        onMouseDown={onAction}\n        data-active={active}\n      >\n        {content}\n      </button>\n    );\n  }\n}\n","import React from 'react';\n\nexport default function UnorderedListIcon() {\n  return (\n    <svg\n      xmlns=\"http://www.w3.org/2000/svg\"\n      width=\"20\"\n      height=\"20\"\n      viewBox=\"0 0 24 24\"\n      style={{ verticalAlign: 'text-top' }}\n    >\n      <path\n        fill=\"currentColor\"\n        d=\"M7 5h14v2H7V5zm0 8v-2h14v2H7zM4 4.50001c.83 0 1.5.66992 1.5 1.5 0 .83007-.67 1.5-1.5 1.5s-1.5-.66993-1.5-1.5c0-.83008.67-1.5 1.5-1.5zM4 10.5c.83 0 1.5.67 1.5 1.5s-.67 1.5-1.5 1.5-1.5-.67-1.5-1.5.67-1.5 1.5-1.5zM7 19v-2h14v2H7zm-3-2.5c.83 0 1.5.67 1.5 1.5s-.67 1.5-1.5 1.5-1.5-.67-1.5-1.5.67-1.5 1.5-1.5z\"\n      />\n    </svg>\n  );\n}\n","import React from 'react';\n\nexport default function OrderedListIcon() {\n  return (\n    <svg\n      xmlns=\"http://www.w3.org/2000/svg\"\n      width=\"20\"\n      height=\"20\"\n      viewBox=\"0 0 24 24\"\n      style={{ verticalAlign: 'text-top' }}\n    >\n      <path\n        fill=\"currentColor\"\n        d=\"M6.99938 12.998v-2H20.9994v2H6.99938zm0 6.0001v-2H20.9994v2H6.99938zm0-12.00001v-2H20.9994v2H6.99938zm-4 1v-3h-1v-1h2v4h-1zm-1 9.00001v-1h3v4h-3v-1h2v-.5h-1v-1h1v-.5h-2zM4.25 10c.41421 0 .75.3358.75.75 0 .2024-.08017.3861-.2105.521L3.11983 13H5v1H2v-.9218L4 11H2v-1h2.25z\"\n      />\n    </svg>\n  );\n}\n","import React from 'react';\nimport type { ChangeEvent, FC, HTMLAttributes } from 'react';\nimport { EditorState, useEditorState } from '../editor/EditorContext';\n\nexport const BtnStyles = createDropdown('Styles', [\n  ['Normal', 'formatBlock', 'DIV'],\n  ['ùóõùó≤ùóÆùó±ùó≤ùóø ùü≠', 'formatBlock', 'H1'],\n  ['Header 2', 'formatBlock', 'H2'],\n  ['ùô≤ùöòùöçùöé', 'formatBlock', 'PRE'],\n]);\n\nexport function createDropdown(\n  title: string,\n  items: DropDownItem[],\n): FC<DropDownFactoryProps> {\n  DropdownFactory.displayName = title;\n\n  return DropdownFactory;\n\n  function DropdownFactory(props: DropDownFactoryProps) {\n    const editorState = useEditorState();\n    const { $el, $selection, htmlMode } = editorState;\n\n    if (htmlMode) {\n      return null;\n    }\n\n    const activeIndex = items.findIndex(\n      (item) => item[1] === 'formatBlock' && $selection?.nodeName === item[2],\n    );\n\n    return (\n      <Dropdown\n        {...props}\n        onChange={onChange}\n        title={title}\n        items={items}\n        selected={activeIndex}\n      />\n    );\n\n    function onChange(e: ChangeEvent<HTMLSelectElement>) {\n      const target = e.target;\n      const selectedValue = target.value;\n      const selectedIndex = parseInt(selectedValue, 10);\n\n      const [, command, commandArgument] = items[selectedIndex];\n\n      e.preventDefault();\n\n      if (document.activeElement !== $el) {\n        $el?.focus();\n      }\n\n      if (typeof command === 'function') {\n        command(editorState);\n      } else {\n        document.execCommand(command, false, commandArgument);\n      }\n\n      setTimeout(() => (target.value = selectedValue), 10);\n    }\n  }\n}\n\nexport function Dropdown({ items, selected, ...inputProps }: DropdownProps) {\n  return (\n    <select {...inputProps} value={selected} className=\"rsw-dd\">\n      <option hidden>{inputProps.title}</option>\n      {items.map((item, index) => (\n        <option key={item[2]} value={index}>\n          {item[0]}\n        </option>\n      ))}\n    </select>\n  );\n}\n\nexport type DropDownItem = [\n  string,\n  string | ((editorState: EditorState) => void),\n  string,\n];\n\nexport interface DropDownFactoryProps\n  extends HTMLAttributes<HTMLSelectElement> {\n  selected?: number;\n}\n\nexport interface DropdownProps extends DropDownFactoryProps {\n  items: DropDownItem[];\n}\n","import React from 'react';\nimport { useEditorState } from '../editor/EditorContext';\n\nexport function HtmlButton({ ...rest }) {\n  const editorState = useEditorState();\n\n  function onClick() {\n    editorState.update({\n      htmlMode: !editorState.htmlMode,\n    });\n  }\n\n  return (\n    <button\n      type=\"button\"\n      title=\"HTML mode\"\n      className=\"rsw-btn\"\n      onClick={onClick}\n      data-active={editorState.htmlMode}\n      {...rest}\n    >\n      &lt;/&gt;\n    </button>\n  );\n}\n","import React from 'react';\nimport { useEditorState } from '../editor/EditorContext';\n\nexport function Separator() {\n  const editorState = useEditorState();\n\n  if (editorState.htmlMode) {\n    return null;\n  }\n\n  return <div className=\"rsw-separator\" />;\n}\n","import React from 'react';\nimport { HTMLAttributes } from 'react';\n\nexport function Toolbar(props: HTMLAttributes<HTMLDivElement>) {\n  return <div {...props} className=\"rsw-toolbar\" />;\n}\n","import React from 'react';\nimport { Editor, EditorProps } from './Editor';\nimport { EditorProvider } from './EditorContext';\nimport {\n  BtnBold,\n  BtnBulletList,\n  BtnClearFormatting,\n  BtnItalic,\n  BtnLink,\n  BtnNumberedList,\n  BtnRedo,\n  BtnStrikeThrough,\n  BtnStyles,\n  BtnUnderline,\n  BtnUndo,\n  HtmlButton,\n  Separator,\n  Toolbar,\n} from '../toolbar';\n\nexport function DefaultEditor(props: EditorProps) {\n  return (\n    <EditorProvider>\n      <Editor {...props}>\n        <Toolbar>\n          <BtnUndo />\n          <BtnRedo />\n          <Separator />\n          <BtnBold />\n          <BtnItalic />\n          <BtnUnderline />\n          <BtnStrikeThrough />\n          <Separator />\n          <BtnNumberedList />\n          <BtnBulletList />\n          <Separator />\n          <BtnLink />\n          <BtnClearFormatting />\n          <HtmlButton />\n          <Separator />\n          <BtnStyles />\n        </Toolbar>\n      </Editor>\n    </EditorProvider>\n  );\n}\n"],"names":["getSelectedNode","document","selection","createRange","parentElement","window","getSelection","rangeCount","getRangeAt","startContainer","parentNode","normalizeHtml","str","replace","ContentEditable","React","memo","forwardRef","_a","ref","className","disabled","tagName","_b","value","rest","__rest","elRef","useRef","htmlRef","restRef","useEffect","current","el","innerHTML","target","createTextNode","appendChild","isTargetFocused","activeElement","nodeValue","sel","range","setStart","length","collapse","removeAllRanges","addRange","HTMLElement","focus","replaceCaret","useMemo","onChange","event","elementHtml","call","__assign","name","createElement","contentEditable","dangerouslySetInnerHTML","__html","onBlur","e","onInput","onKeyDown","onKeyUp","$el","EditorContext","createContext","undefined","EditorProvider","children","useState","htmlMode","update","attrs","setState","prevState","date","Date","now","state","Provider","useEditorState","context","useContext","Error","HtmlEditor","Editor","containerProps","onSelect","editorState","onClickOutside","contains","$selection","addEventListener","removeEventListener","BtnBold","createButton","BtnBulletList","xmlns","width","height","viewBox","style","verticalAlign","fill","d","BtnClearFormatting","BtnItalic","BtnStrikeThrough","BtnLink","nodeName","execCommand","prompt","BtnNumberedList","BtnRedo","BtnUnderline","textDecoration","BtnUndo","title","content","command","ButtonFactory","displayName","props","active","queryCommandState","type","onMouseDown","preventDefault","BtnStyles","createDropdown","items","DropdownFactory","activeIndex","findIndex","item","Dropdown","selectedValue","selectedIndex","parseInt","commandArgument","setTimeout","selected","inputProps","hidden","map","index","key","HtmlButton","onClick","Separator","Toolbar","DefaultEditor"],"mappings":"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"}